datasource db {
    url      = env("DATABASE_URL")
    provider = "mysql"
}

generator client {
    provider = "prisma-client-js"
}

model Student {
    id           Int           @id @default(autoincrement())
    firstname    String
    surename     String
    class        String?
    extendedMath Boolean?
    description  String?
    defaultPrice Float?
    balance      Float         @default(0)
    isActive     Boolean       @default(true)
    ContactData  ContactData[]
    Payment      Payment[]
    Event        Event[]
}

model ContactData {
    id        Int         @id @default(autoincrement())
    type      ContactType
    value     String
    studentId Int
    student   Student     @relation(fields: [studentId], references: [id])
}

enum ContactType {
    PHONE
    EMAIL
    FACEBOOK
    DISCORD
}

model Payment {
    id        Int      @id @default(autoincrement())
    studentId Int
    price     Int
    date      DateTime
    student   Student  @relation(fields: [studentId], references: [id])
}

model Event {
    id           Int      @id @default(autoincrement())
    date         DateTime
    isCanceled   Boolean  @default(false)
    isOverridden Boolean  @default(false)

    eventSeriesId Int?
    eventSeries   EventSeries? @relation(fields: [eventSeriesId], references: [id])

    //Generic data
    name        String
    description String?
    startHour   Int?
    endHour     Int?
    eventType   EventType @default(LESSON)

    //LessonData
    price     Float?
    isPaid    Boolean? @default(false)
    studentId Int?
    student   Student? @relation(fields: [studentId], references: [id])
}

model EventSeries {
    id         Int             @id @default(autoincrement())
    type       EventSeriesType
    pattern    String?
    //DAILY - none
    //WEEKLY - arrays of days 
    //MONTHLY - array of days
    //YEARLY - full date
    startDate  DateTime?
    endDate    DateTime?
    isCanceled Boolean         @default(false)

    //Generic data
    name        String
    description String?
    startHour   Int?
    endHour     Int?
    eventType   EventType @default(LESSON)

    //LessonData
    price     Float?
    studentId Int?

    events Event[]
}

model Config {
    id                   Int    @id @default(autoincrement())
    version              String // newest supported client version
    lastSupportedVersion String // minimum client version
    welcomeMessageTitle  String
    welcomeMessage       String
}

//TODO - make possible to user create own event types
enum EventType {
    DEFAULT
    LESSON
}

enum EventSeriesType {
    DAILY
    WEEKLY
    MONTHLY
    YEARLY
}
